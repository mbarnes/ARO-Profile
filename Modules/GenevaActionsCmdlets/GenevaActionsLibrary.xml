<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GenevaActionsLibrary</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Constants">
            <summary>
            List of constants to be used through out.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments">
            <summary>
            List of Environments available to use in the client.
            Will be used to resolve the actual URI
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.Dev">
            <summary>
            The local Ations Dev environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.Test">
            <summary>
            The Actions Test environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.Public">
            <summary>
            The Actions Public environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.Mooncake">
            <summary>
            The Actions Mooncake environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.Fairfax">
            <summary>
            The Actions Fairfax environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.Blackforest">
            <summary>
            The Actions Blackforest environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.Int">
            <summary>
            The Actions Internal environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.PublicBeta">
            <summary>
            The Actions Public Beta environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.MooncakeBeta">
            <summary>
            The Actions Mooncake Beta environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.FairfaxBeta">
            <summary>
            The Actions Fairfax Beta environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.BlackforestBeta">
            <summary>
            The Actions BlackForest Beta environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.USSec">
            <summary>
            The Actions USSec environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.USNat">
            <summary>
            The Actions USNat environment
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.USNatE">
            <summary>
            The Actions USNat environment (specifying the east environment instead of using the shared dns entry)
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments.USNatW">
            <summary>
            The Actions USNat environment (specifying the west environment instead of using the shared dns entry)
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironmentsExtensions">
            <summary>
            Class for extension methods on the ActionsEnvironments enum
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironmentsExtensions.IsAirGappedEnvironment(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments)">
            <summary>
            Checks whether the environment is air gapped.
            Air gapped environments have extremely strict access controls.
            </summary>
            <param name="env">The environment</param>
            <returns>true if the env is air gapped, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironmentsExtensions.GetGALogTenants(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments)">
            <summary>
            Gets the tenant filter for GA logs.
            </summary>
            <param name="actionsEnvironments"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.AzureClientCredentials.#ctor(System.String)">
            <summary>
            Inits an <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.AzureClientCredentials"/> with a fixed token
            </summary>
            <param name="token">the token to use with authentication</param>
            <remarks>This provides no guarantee that the authentication token is valid</remarks>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.AzureClientCredentials.#ctor(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType)">
            <summary>
            Inits an <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.AzureClientCredentials"/> with credential based authentication
            </summary>
            <param name="endpoint"></param>
            <param name="clientCertificate">The certificate that will be used to connect to Geneva Actions</param>
            <param name="clientHomeSts">The Uri of the Client Home STS</param>
            <param name="certCredentialType">When <see cref="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.SubjectNameCredential"/> the certificate will be authenticated via Issuer and SAN, 
            otherwise if <see cref="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.CertificateCredential"/> the certificate will be authenticated via thumbprint.</param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.AzureClientCredentials.#ctor(System.Uri,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,System.Nullable{System.Boolean})">
            <summary>
            Inits an <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.AzureClientCredentials"/> with credential based authentication
            </summary>
            <param name="endpoint"></param>
            <param name="clientCredential"></param>
            <param name="clientHomeSts"></param>
            <param name="isInteractive">When set to true, if it is an user account and needs to use a smart card auth, it will popup an UI. Won't pop up for SAW device</param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.AzureClientCredentials.GetGeneratedAuthenticationToken">
            <summary>
            Gets the authentication token if a valid one exists. If the current token has expired
            and these credentials have an associated <see cref="T:Microsoft.WindowsAzure.Wapd.AuthenticationLibraries.DstsAuthentication.DstsWebAuthenticationClient"/>
            a new one will be generated
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the credentials have been initialized without a certificate</exception>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.IConnectionParametersFactory">
            <summary>
            Provides methods to create a <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.IConnectionParametersFactory.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object
            </summary>
            <param name="environment">The environment to connect to</param>
            <param name="token">The authentication token for the connection</param>
            <returns>Configured <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/></returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.IConnectionParametersFactory.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object
            </summary>
            <param name="environment">The environment to connect to</param>
            <param name="certificate">The certificate used to authenticate the connection</param>
            <returns>Configured <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/></returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.IConnectionParametersFactory.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,System.String,System.Security.Cryptography.X509Certificates.StoreLocation)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object
            </summary>
            <param name="environment">The environment to connect to</param>
            <param name="certificateThumbprint">The thumbprint of the certificate to authenticate the conection</param>
            <param name="location">The location of the certificate to authenticate the conection</param>
            <returns>Configured <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/></returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.IConnectionParametersFactory.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object
            </summary>
            <param name="environment">The environment to connect to</param>
            <param name="clientCredential">The client credential used to authenticate the connection</param>
            <param name="clientHomeSts">HomeSts to authenticate against</param>
            <returns>Configured <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/></returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.IConnectionParametersFactory.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object
            </summary>
            <param name="environment">The environment to connect to</param>
            <param name="certificate">The certificate used to authenticate the connection</param>
            <param name="clientHomeSts">HomeSts to authenticate against</param>
            <returns>Configured <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/></returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.IConnectionParametersFactory.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,System.Boolean)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object
            </summary>
            <param name="environment">The environment to connect to</param>
            <param name="clientCredential">The client credential used to authenticate the connection</param>
            <param name="clientHomeSts">HomeSts to authenticate against</param>
            <param name="IsInteractive">Force Interactive auth</param>
            <returns>Configured <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/></returns>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters">
            <summary>
            The parameters that are used to construct a <see cref="T:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient"/> with a valid endpoint and credentials
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Environments">
            <summary>
            Default mapping between <see cref="T:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments"/> and the environment URI
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,System.String)">
            <summary>
            Creates <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> based upon a given environment and a token
            </summary>
            <param name="environment">The Environment that will be connected to</param>
            <param name="token">The auth token for this environment</param>
            <returns>A <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object containing the required fields to connect ot Geneva Actions</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Create(System.Uri,System.String)">
            <summary>
            Creates <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> based upon a given environment and a token
            </summary>
            <param name="endpoint">The Endpoint that will be connected to</param>
            <param name="token">The auth token for this environment</param>
            <returns>A <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object containing the required fields to connect ot Geneva Actions</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType)">
            <summary>
            Creates <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> based upon a given environment and a certificate
            </summary>
            <param name="environment">The Environment that will be connected to</param>
            <param name="certificate">The certificate that will be used to connect to Geneva Actions</param>
            <param name="certCredentialType">When <see cref="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.SubjectNameCredential"/> the certificate will be authenticated via Issuer and SAN,
            otherwise if <see cref="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.CertificateCredential"/> the certificate will be authenticated via thumbprint.</param>
            <returns>A <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object containing the required fields to connect ot Geneva Actions</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Create(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType)">
            <summary>
            Creates <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> based upon a given environment and a certificate
            </summary>
            <param name="endpoint">The Endpoint that will be connected to</param>
            <param name="certificate">The certificate that will be used to connect to Geneva Actions</param>
            <param name="certCredentialType">When <see cref="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.SubjectNameCredential"/> the certificate will be authenticated via Issuer and SAN,
            otherwise if <see cref="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.CertificateCredential"/> the certificate will be authenticated via thumbprint.</param>
            <returns>A <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object containing the required fields to connect ot Geneva Actions</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,System.String,System.Security.Cryptography.X509Certificates.StoreLocation,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType)">
            <summary>
            Creates <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> based upon a given environment and the information of a certificate
            </summary>
            <param name="environment">The Environment that will be connected to</param>
            <param name="certificateThumbprint">The thumbprint of the certificate that will be used to connect to Geneva Actions</param>
            <param name="location">The <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation"/> where the certificate is stored</param>
            <param name="certCredentialType">When <see cref="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.SubjectNameCredential"/> the certificate will be authenticated via Issuer and SAN,
            otherwise if <see cref="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.CertificateCredential"/> the certificate will be authenticated via thumbprint.</param>
            <returns>A <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object containing the required fields to connect ot Geneva Actions</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Create(System.Uri,System.String,System.Security.Cryptography.X509Certificates.StoreLocation)">
            <summary>
            Creates <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> based upon a specific URI and the information of a certificate
            </summary>
            <param name="endpoint">The Endpoint that will be connected to</param>
            <param name="certificateThumbprint">The thumbprint of the certificate that will be used to connect to Geneva Actions</param>
            <param name="location">The <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation"/> where the certificate is stored</param>
            <returns>A <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object containing the required fields to connect ot Geneva Actions</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts)">
            <summary>
            Creates <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> based upon a given environment and a certificate
            </summary>
            <param name="environment">The Environment that will be connected to</param>
            <param name="clientCredential">The client credential that will be used to connect to Geneva Actions</param>
            <param name="clientHomeSts">The Uri of the Client Home STS</param>
            <returns>A <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object containing the required fields to connect ot Geneva Actions</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,System.Security.Cryptography.X509Certificates.X509Certificate2,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType)">
            <summary>
            Creates <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> based upon a given environment and a certificate
            </summary>
            <param name="environment">The Environment that will be connected to</param>
            <param name="certificate">The certificate that will be used to connect to Geneva Actions</param>
            <param name="clientHomeSts">The Uri of the Client Home STS</param>
            <param name="certCredentialType">When <see cref="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.SubjectNameCredential"/> the certificate will be authenticated via Issuer and SAN,
            otherwise if <see cref="F:Microsoft.WindowsAzure.Security.Authentication.X509CertCredentialType.CertificateCredential"/> the certificate will be authenticated via thumbprint.</param>
            <returns>A <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object containing the required fields to connect ot Geneva Actions</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Create(Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientHomeSts,System.Boolean)">
            <summary>
            Creates <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> based upon a given environment, clientCredential and interactive mode
            </summary>
            <param name="environment"></param>
            <param name="clientCredential"></param>
            <param name="clientHomeSts"></param>
            <param name="IsInteractive">When set to true, if it is an user account and needs to use a smart card auth, it will popup an UI. Won't pop up for SAW device</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters.Create(System.Uri,Microsoft.WindowsAzure.Security.Authentication.Contracts.IClientCredential)">
            <summary>
            Creates <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> based upon a specific URI and a client credential
            </summary>
            <param name="endpoint">The Endpoint that will be connected to</param>
            <param name="clientCredential">The client credential that will be used to connect to Geneva Actions</param>
            <returns>A <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> object containing the required fields to connect ot Geneva Actions</returns>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions">
            <summary>
            Extension of operations class for get file outputs.
            </summary>
            <summary>
            Extension methods for Operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationFileOutput(Microsoft.Azure.Geneva.Actions.Client.IOperations,Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult)">
            <summary>
            Get Operations file output
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='result'><see cref="T:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult"/></param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationFileOutputAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult,System.Threading.CancellationToken)">
            <summary>
            Get Operations file output
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='result'><see cref="T:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult"/></param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperations(Microsoft.Azure.Geneva.Actions.Client.IOperations)">
            <summary>
            Get Operations History
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationsAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.Threading.CancellationToken)">
            <summary>
            Get Operations History
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.RunOperation(Microsoft.Azure.Geneva.Actions.Client.IOperations,Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest)">
            <summary>
            Runs the specific Operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='operationRequest'>
            The operation request.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.RunOperationAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest,System.Threading.CancellationToken)">
            <summary>
            Runs the specific Operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='operationRequest'>
            The operation request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationsHistoryAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations)">
            <summary>
            Get Operations History from all regions
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationsHistoryAsyncAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.Threading.CancellationToken)">
            <summary>
            Get Operations History from all regions
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationResults(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String)">
            <summary>
            Get Operations Results
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationResultsAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Operations Results
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationArguments(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String)">
            <summary>
            Get Operations Parameters
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationArgumentsAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Operations Parameters
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetBatchOperationResults(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String)">
            <summary>
            Get Operations Results
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetBatchOperationResultsAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Operations Results
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationStatus(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String)">
            <summary>
            Get Operations Status
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationStatusAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Operations Status
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationFileOutput(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String)">
            <summary>
            Get Operations file output
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.GetOperationFileOutputAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Operations file output
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.RunBatchOperation(Microsoft.Azure.Geneva.Actions.Client.IOperations,Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest)">
            <summary>
            Run batch Operation
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='batchOperationRequest'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.RunBatchOperationAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest,System.Threading.CancellationToken)">
            <summary>
            Run batch Operation
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='batchOperationRequest'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.CancelOperation(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String)">
            <summary>
            Cancel Operation
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.OperationsExtensions.CancelOperationAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel Operation
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Extensions.OperationsExtensions">
            <summary>
            Extension methods for Operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Extensions.OperationsExtensions.RunOperationAndPollForResultsAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Run operation and poll for results
            </summary>
            <param name="operations">The operations group for this extension method.</param>
            <param name="operationRequest">The request object to send</param>
            <param name="customHeaders">Custom headers to apply to the Run, Poll, and GetResult requests</param>
            <param name="cancellationToken">The Cancellation Token used to cancel the ongoing request</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Extensions.OperationsExtensions.PollForResults(Microsoft.Azure.Geneva.Actions.Client.IOperations,Microsoft.Azure.Geneva.Actions.Client.Models.ExecuteOperationResponse,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Action{System.String})">
            <summary>
            Poll for an operation's results
            </summary>
            <param name="operations">The operations group for this extension method.</param>
            <param name="executeOperationResponse">Contains the execution Id and region to poll for completion.</param>
            <param name="customHeaders">Custom headers to apply to the Run, Poll, and GetResult requests</param>
            <param name="maxPollTime">The maximum time to poll for results</param>
            <param name="logAction">The function to use to log progress</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Extensions.OperationsExtensions.PollForResults(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String,System.TimeSpan,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Action{System.String})">
            <summary>
            Poll for an operation's results
            </summary>
            <param name="operations">The operations group for this extension method.</param>
            <param name="executionId">The execution Id to poll for completion</param>
            <param name="customHeaders">Custom headers to apply to the Run, Poll, and GetResult requests</param>
            <param name="maxPollTime">The maximum time to poll for results</param>
            <param name="logAction">The function to use to log progress</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Extensions.OperationsExtensions.PollForResultsAsync(Microsoft.Azure.Geneva.Actions.Client.IOperations,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Poll for an operation's results
            </summary>
            <param name="operations">The operations group for this extension method.</param>
            <param name="executionId">The execution Id to poll for completion</param>
            <param name="customHeaders">Custom headers to apply to the Run, Poll, and GetResult requests</param>
            <param name="cancellationToken">The Cancellation Token used to cancel the ongoing request</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Extensions.OperationsExtensions.IsStateComplete(System.Nullable{Microsoft.Azure.Geneva.Actions.Client.Models.OperationState})">
            <summary>
            Indicates if the given state is a completed state
            </summary>
            <param name="state">The state to check</param>
            <returns>True iff the state is not null, and is a finished state</returns>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.AuthOperations">
            <summary>
            AuthOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.AuthOperations.#ctor(Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient)">
            <summary>
            Initializes a new instance of the AuthOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.AuthOperations.Client">
            <summary>
            Gets a reference to the GenevaActionsRestAPIClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.AuthOperations.GetIsAuthCompletedWithHttpMessagesAsync(System.Int64,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Return true if data in cookie is newer than passed date
            </summary>
            <param name='currentDateSinceJsEpoch'>
            Javascript Date since Epoch in UTC
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.AuthOperations.GetClaimsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Return List of claims user has
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.AuthOperationsExtensions">
            <summary>
            Extension methods for AuthOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.AuthOperationsExtensions.GetIsAuthCompleted(Microsoft.Azure.Geneva.Actions.Client.IAuthOperations,System.Int64)">
            <summary>
            Return true if data in cookie is newer than passed date
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='currentDateSinceJsEpoch'>
            Javascript Date since Epoch in UTC
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.AuthOperationsExtensions.GetIsAuthCompletedAsync(Microsoft.Azure.Geneva.Actions.Client.IAuthOperations,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Return true if data in cookie is newer than passed date
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='currentDateSinceJsEpoch'>
            Javascript Date since Epoch in UTC
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.AuthOperationsExtensions.GetClaims(Microsoft.Azure.Geneva.Actions.Client.IAuthOperations)">
            <summary>
            Return List of claims user has
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.AuthOperationsExtensions.GetClaimsAsync(Microsoft.Azure.Geneva.Actions.Client.IAuthOperations,System.Threading.CancellationToken)">
            <summary>
            Return List of claims user has
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperations">
            <summary>
            ExtensionOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperations.#ctor(Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient)">
            <summary>
            Initializes a new instance of the ExtensionOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperations.Client">
            <summary>
            Gets a reference to the GenevaActionsRestAPIClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperations.GetExtensionsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get list of Extensions - Operations
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperations.GetExtensionWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get an Extension
            </summary>
            <param name='extension'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperations.GetExtensionOperationsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Extension operations
            </summary>
            <param name='extension'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperations.GetExtensionOperationDetailsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the operation details on all the operations of an extension.
            </summary>
            <param name='extension'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperations.GetOperationDetailsWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operation Details including parameters
            </summary>
            <param name='extension'>
            </param>
            <param name='operation'>
            </param>
            <param name='flags'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperations.GetDynamicParametersWithHttpMessagesAsync(Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operation dynamic parameters values
            </summary>
            <param name='operationRequest'>
            Operation Request
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions">
            <summary>
            Extension methods for ExtensionOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetExtensions(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations)">
            <summary>
            Get list of Extensions - Operations
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetExtensionsAsync(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,System.Threading.CancellationToken)">
            <summary>
            Get list of Extensions - Operations
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetExtension(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,System.String)">
            <summary>
            Get an Extension
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extension'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetExtensionAsync(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get an Extension
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extension'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetExtensionOperations(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,System.String)">
            <summary>
            Get Extension operations
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extension'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetExtensionOperationsAsync(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Extension operations
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extension'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetExtensionOperationDetails(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,System.String)">
            <summary>
            Gets the operation details on all the operations of an extension.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extension'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetExtensionOperationDetailsAsync(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the operation details on all the operations of an extension.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extension'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetOperationDetails(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,System.String,System.String,System.String)">
            <summary>
            Get Operation Details including parameters
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extension'>
            </param>
            <param name='operation'>
            </param>
            <param name='flags'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetOperationDetailsAsync(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get Operation Details including parameters
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extension'>
            </param>
            <param name='operation'>
            </param>
            <param name='flags'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetDynamicParameters(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest)">
            <summary>
            Get Operation dynamic parameters values
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='operationRequest'>
            Operation Request
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ExtensionOperationsExtensions.GetDynamicParametersAsync(Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations,Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest,System.Threading.CancellationToken)">
            <summary>
            Get Operation dynamic parameters values
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='operationRequest'>
            Operation Request
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient">
            <summary>
            The Geneva Actions Client, used to programmatically access Geneva Actions endpoint
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.Auth">
            <summary>
            Gets the IAuthOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.Extension">
            <summary>
            Gets the IExtensionOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.Management">
            <summary>
            Gets the IManagementOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling GenevaActionsRestAPIClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling GenevaActionsRestAPIClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.DefaultRetryInterval">
            <summary>
            This will be used if the server does not send a specific value to wait
            before checking for results; this value does not need to be same as
            the server side settings; as we own both, we selected it to be the same
            until we improve our perf.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.DefaultRetryCount">
            <summary>
            Default retry count.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.DefaultIncrement">
            <summary>
            Default increment value to enable incremental retry strategy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters,System.Boolean,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            If passed closeConnection as true, this constructor closes http connection after every request which adds some latency
            do not use this constructor if latency is absolutely critical
            </summary>
            <param name="connectionParameters">Required. The <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> to connect to Geneva Actions with</param>
            <param name="closeConnection">Required. passing true will close connection after every request.</param>
            <param name="handlers">Optional. The delegating handlers to add to the http client pipeline.</param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.#ctor(Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the GenevaActionsRestAPIClient class.
            This is the recommended constructor of a <see cref="T:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient"/> for most users.
            </summary>
            <param name="connectionParameters">Required. The <see cref="T:Microsoft.Azure.Geneva.Actions.Client.Credentials.ConnectionParameters"/> to connect to Geneva Actions with</param>
            <param name="handlers">Optional. The delegating handlers to add to the http client pipeline.</param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.Dispose(System.Boolean)">
            <summary>
            Dispose of private members.s
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.SetRetryPolicy(Microsoft.Rest.TransientFaultHandling.RetryPolicy)">
            <summary>
            Sets the retry policy for the client.
            </summary>
            <param name="retryPolicy">Retry policy to be used for transient errors.</param>
            <remarks>If null then the default is <see cref="T:Microsoft.Rest.TransientFaultHandling.RetryPolicy"/>"/> with <see cref="T:Microsoft.Rest.TransientFaultHandling.TransientErrorIgnoreStrategy"/> set to 0 retries.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.GetAuthenticationToken">
            <summary>
            Gets the dSTS authentication token for the environment the client is initialized with.
            </summary>
            <returns>The dSTS authentication token for the environment the client is initialized with</returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient.GetActionsEnvironment(System.String)">
            <summary>
            Returns the correct environment based on the given environment name. This is useful if
            implementation side uses different names or acronyms to identify the environment.
            </summary>
            <param name="environmentName">Environment name</param>
            <returns>The <see cref="T:Microsoft.Azure.Geneva.Actions.Client.ActionsEnvironments"/> value based on the given environment name.</returns>
            <example>Test, Prod, Public, Beta, PublicBeta, MC, Mooncake, MCBeta, MooncakeBeta, FF, Fairfax, FFBeta, FairfaxBeta, BF, Blackforest, BF2, BFBeta, BlackforestBeta</example>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.IAuthOperations">
            <summary>
            AuthOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IAuthOperations.GetIsAuthCompletedWithHttpMessagesAsync(System.Int64,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Return true if data in cookie is newer than passed date
            </summary>
            <param name='currentDateSinceJsEpoch'>
            Javascript Date since Epoch in UTC
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IAuthOperations.GetClaimsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Return List of claims user has
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations">
            <summary>
            ExtensionOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations.GetExtensionsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get list of Extensions - Operations
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations.GetExtensionWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get an Extension
            </summary>
            <param name='extension'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations.GetExtensionOperationsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Extension operations
            </summary>
            <param name='extension'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations.GetExtensionOperationDetailsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the operation details on all the operations of an extension.
            </summary>
            <param name='extension'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations.GetOperationDetailsWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operation Details including parameters
            </summary>
            <param name='extension'>
            </param>
            <param name='operation'>
            </param>
            <param name='flags'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IExtensionOperations.GetDynamicParametersWithHttpMessagesAsync(Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operation dynamic parameters values
            </summary>
            <param name='operationRequest'>
            Operation Request
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient">
            <summary>
            </summary>
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.Auth">
            <summary>
            Gets the IAuthOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.Extension">
            <summary>
            Gets the IExtensionOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.Management">
            <summary>
            Gets the IManagementOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IGenevaActionsRestAPIClient.GetAuthenticationToken">
            <summary>
            Gets the dSTS authentication token for the environment the client is initialized with.
            </summary>
            <returns>The dSTS authentication token for the environment the client is initialized with</returns>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations">
            <summary>
            ManagementOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations.GetScopesWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            management/scopes : Get all scopes registered in Geneva Actions
            current environment and their owner servicetree ids
            management/scopes?serviceTreeId={guidAsString} : Get all scopes
            mapped to a given service tree id
            </summary>
            <param name='serviceTreeId'>
            Service Tree ID - Guid
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations.AddScopeMappingWithHttpMessagesAsync(Microsoft.Azure.Geneva.Actions.Client.Models.ClaimScope,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds new scope to service tree id mapping
            </summary>
            <param name='claimScope'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations.GetScopeMappingWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets Scope::ServiceTreeId mapping for given scope
            </summary>
            <param name='scope'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations.DeleteScopeMappingWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes scope to service tree id mapping
            </summary>
            <param name='scope'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations.GetExtensionWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns management meta data of an extension
            </summary>
            <param name='extensionName'>
            Name of extension
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations.ListPackageVersionsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns all the uploaded package versions
            </summary>
            <param name='extensionName'>
            Name of extension
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations.OnboardWithHttpMessagesAsync(Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Onboard a new extension onto Geneva Actions.
            </summary>
            <param name='onboardRequest'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations.GetSecurityGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This will validates given security group can be used for claim
            mapping / JIT policy addition or not.
            We will piggyback to DSCM APIs to achieve this.
            </summary>
            <param name='domain'>
            domain of security group e.g.. AME or REDMOND
            </param>
            <param name='name'>
            name of security group e.g.. HelloGalaxy-ReadOnly-f696 or dscmppe
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations.GetServiceTreeAdminsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets admin aliases of given service tree ID
            </summary>
            <param name='id'>
            Service tree ID
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IManagementOperations.GetServiceTreeIdOfUserAsAdminWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get list of serviceTree where currently logged in user is
            administrator
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.IOperations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IOperations.GetOperationsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations History
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IOperations.RunOperationWithHttpMessagesAsync(Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Runs the specific Operation.
            </summary>
            <param name='operationRequest'>
            The operation request.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IOperations.GetOperationsHistoryAsyncWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations History from all regions
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IOperations.GetOperationResultsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations Results
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IOperations.GetOperationArgumentsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations Parameters
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IOperations.GetBatchOperationResultsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations Results
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IOperations.GetOperationStatusWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations Status
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IOperations.GetOperationFileOutputWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations file output
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IOperations.RunBatchOperationWithHttpMessagesAsync(Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Run batch Operation
            </summary>
            <param name='batchOperationRequest'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.IOperations.CancelOperationWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancel Operation
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations">
            <summary>
            ManagementOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.#ctor(Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient)">
            <summary>
            Initializes a new instance of the ManagementOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.Client">
            <summary>
            Gets a reference to the GenevaActionsRestAPIClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.GetScopesWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            management/scopes : Get all scopes registered in Geneva Actions current
            environment and their owner servicetree ids
            management/scopes?serviceTreeId={guidAsString} : Get all scopes mapped to a
            given service tree id
            </summary>
            <param name='serviceTreeId'>
            Service Tree ID - Guid
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.AddScopeMappingWithHttpMessagesAsync(Microsoft.Azure.Geneva.Actions.Client.Models.ClaimScope,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds new scope to service tree id mapping
            </summary>
            <param name='claimScope'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.GetScopeMappingWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets Scope::ServiceTreeId mapping for given scope
            </summary>
            <param name='scope'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.DeleteScopeMappingWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes scope to service tree id mapping
            </summary>
            <param name='scope'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.GetExtensionWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns management meta data of an extension
            </summary>
            <param name='extensionName'>
            Name of extension
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.ListPackageVersionsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns all the uploaded package versions
            </summary>
            <param name='extensionName'>
            Name of extension
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.OnboardWithHttpMessagesAsync(Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Onboard a new extension onto Geneva Actions.
            </summary>
            <param name='onboardRequest'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.GetSecurityGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This will validates given security group can be used for claim mapping /
            JIT policy addition or not.
            We will piggyback to DSCM APIs to achieve this.
            </summary>
            <param name='domain'>
            domain of security group e.g.. AME or REDMOND
            </param>
            <param name='name'>
            name of security group e.g.. HelloGalaxy-ReadOnly-f696 or dscmppe
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.GetServiceTreeAdminsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets admin aliases of given service tree ID
            </summary>
            <param name='id'>
            Service tree ID
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperations.GetServiceTreeIdOfUserAsAdminWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get list of serviceTree where currently logged in user is administrator
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions">
            <summary>
            Extension methods for ManagementOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetScopes(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String)">
            <summary>
            management/scopes : Get all scopes registered in Geneva Actions current
            environment and their owner servicetree ids
            management/scopes?serviceTreeId={guidAsString} : Get all scopes mapped to a
            given service tree id
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='serviceTreeId'>
            Service Tree ID - Guid
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetScopesAsync(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            management/scopes : Get all scopes registered in Geneva Actions current
            environment and their owner servicetree ids
            management/scopes?serviceTreeId={guidAsString} : Get all scopes mapped to a
            given service tree id
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='serviceTreeId'>
            Service Tree ID - Guid
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.AddScopeMapping(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,Microsoft.Azure.Geneva.Actions.Client.Models.ClaimScope)">
            <summary>
            Adds new scope to service tree id mapping
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='claimScope'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.AddScopeMappingAsync(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,Microsoft.Azure.Geneva.Actions.Client.Models.ClaimScope,System.Threading.CancellationToken)">
            <summary>
            Adds new scope to service tree id mapping
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='claimScope'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetScopeMapping(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String)">
            <summary>
            Gets Scope::ServiceTreeId mapping for given scope
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetScopeMappingAsync(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Scope::ServiceTreeId mapping for given scope
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.DeleteScopeMapping(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String)">
            <summary>
            Deletes scope to service tree id mapping
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.DeleteScopeMappingAsync(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes scope to service tree id mapping
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetExtension(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String)">
            <summary>
            Returns management meta data of an extension
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extensionName'>
            Name of extension
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetExtensionAsync(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns management meta data of an extension
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extensionName'>
            Name of extension
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.ListPackageVersions(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String)">
            <summary>
            Returns all the uploaded package versions
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extensionName'>
            Name of extension
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.ListPackageVersionsAsync(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns all the uploaded package versions
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='extensionName'>
            Name of extension
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.Onboard(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest)">
            <summary>
            Onboard a new extension onto Geneva Actions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='onboardRequest'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.OnboardAsync(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest,System.Threading.CancellationToken)">
            <summary>
            Onboard a new extension onto Geneva Actions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='onboardRequest'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetSecurityGroup(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String,System.String)">
            <summary>
            This will validates given security group can be used for claim mapping /
            JIT policy addition or not.
            We will piggyback to DSCM APIs to achieve this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='domain'>
            domain of security group e.g.. AME or REDMOND
            </param>
            <param name='name'>
            name of security group e.g.. HelloGalaxy-ReadOnly-f696 or dscmppe
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetSecurityGroupAsync(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            This will validates given security group can be used for claim mapping /
            JIT policy addition or not.
            We will piggyback to DSCM APIs to achieve this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='domain'>
            domain of security group e.g.. AME or REDMOND
            </param>
            <param name='name'>
            name of security group e.g.. HelloGalaxy-ReadOnly-f696 or dscmppe
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetServiceTreeAdmins(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String)">
            <summary>
            Gets admin aliases of given service tree ID
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            Service tree ID
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetServiceTreeAdminsAsync(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets admin aliases of given service tree ID
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='id'>
            Service tree ID
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetServiceTreeIdOfUserAsAdmin(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations)">
            <summary>
            Get list of serviceTree where currently logged in user is administrator
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.ManagementOperationsExtensions.GetServiceTreeIdOfUserAsAdminAsync(Microsoft.Azure.Geneva.Actions.Client.IManagementOperations,System.Threading.CancellationToken)">
            <summary>
            Get list of serviceTree where currently logged in user is administrator
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.AcisClaim">
            <summary>
            Describes a user claim
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.AcisClaim.#ctor">
            <summary>
            Initializes a new instance of the AcisClaim class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.AcisClaim.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the AcisClaim class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.AcisClaim.Issuer">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.AcisClaim.Type">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.AcisClaim.ValidityEndDate">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.AcisClaim.ValidityStartDate">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.AcisClaim.Value">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.AlternateOperation">
            <summary>
            Class to assist in transition from one operation to another.
            The link to the alternate operation is evaluated on the bases of
            the extension name and the operation key provided.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.AlternateOperation.#ctor">
            <summary>
            Initializes a new instance of the AlternateOperation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.AlternateOperation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AlternateOperation class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.AlternateOperation.ExtensionName">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.AlternateOperation.OperationId">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest">
            <summary>
            Object used to construct the information needed to submit a batch
            operation request
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.#ctor">
            <summary>
            Initializes a new instance of the BatchOperationRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.#ctor(System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.String}},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the BatchOperationRequest class.
            </summary>
            <param name="parametersInstances">Batch input parameters for the
            operation.</param>
            <param name="extension">Extension name
            eg: "RDFE"</param>
            <param name="id">Operation Id to execute.
            eg: "FromEmailIdGetPUIDs"</param>
            <param name="endpoint">Full name of ACIS endpoint to call the
            operation against.
            eg. "Microsoft Test - RDFE Current"</param>
            <param name="allowProxy">Whether this request can be operated as a
            proxy
            This flag is not needed as soon as APIGateway starts supporting the
            batch opertaion.
            Or we can go with only one OperationExecution implementation
            containing a property isBatch.</param>
            <param name="isBatch">Whether the request is batch or not.</param>
            <param name="executionFlags">Flags specific to control operation
            execution, reserved for testing purposes, do not use
            outside of this context.</param>
            <param name="flags">Input flags for the operation.  This is often
            unused, but can be used to specify meta-info about
            how we want results formatted, etc.</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.ParametersInstances">
            <summary>
            Gets or sets batch input parameters for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.AllowProxy">
            <summary>
            Gets whether this request can be operated as a proxy
            This flag is not needed as soon as APIGateway starts supporting the
            batch opertaion.
            Or we can go with only one OperationExecution implementation
            containing a property isBatch.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.IsBatch">
            <summary>
            Gets whether the request is batch or not.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.ExecutionFlags">
            <summary>
            Gets or sets flags specific to control operation execution,
            reserved for testing purposes, do not use
            outside of this context.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.Extension">
            <summary>
            Gets or sets extension name
            eg: "RDFE"
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.Id">
            <summary>
            Gets or sets operation Id to execute.
            eg: "FromEmailIdGetPUIDs"
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.Endpoint">
            <summary>
            Gets or sets full name of ACIS endpoint to call the operation
            against.
            eg. "Microsoft Test - RDFE Current"
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.Flags">
            <summary>
            Gets or sets input flags for the operation.  This is often unused,
            but can be used to specify meta-info about
            how we want results formatted, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.ClaimScope">
            <summary>
            Describes a scope and their owner
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.ClaimScope.#ctor">
            <summary>
            Initializes a new instance of the ClaimScope class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.ClaimScope.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ClaimScope class.
            </summary>
            <param name="scope">The scope which is being described</param>
            <param name="serviceTreeId">The ServiceTree id that owns the
            scope</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.ClaimScope.Scope">
            <summary>
            Gets or sets the scope which is being described
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.ClaimScope.ServiceTreeId">
            <summary>
            Gets or sets the ServiceTree id that owns the scope
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedAuthEndpoint">
            <summary>
            Describes a delegated auth endpoint
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedAuthEndpoint.#ctor">
            <summary>
            Initializes a new instance of the DelegatedAuthEndpoint class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedAuthEndpoint.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the DelegatedAuthEndpoint class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedAuthEndpoint.ServiceName">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedAuthEndpoint.ServiceAccount">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedJitClaim">
            <summary>
            Class to expose JIT claim details for an endpoint accessed via dSTS
            delegated auth
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedJitClaim.#ctor">
            <summary>
            Initializes a new instance of the DelegatedJitClaim class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedJitClaim.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the DelegatedJitClaim class.
            </summary>
            <param name="resourceType">The JIT resource type the claim applies
            to.
            example: RDFE</param>
            <param name="claim">The claim value.
            example: PlatformServiceAdministrator</param>
            <param name="homeDsts">Optional. The home dSTS endpoint for the
            service.
            example: ch1-dsts.dsts.core.windows.net</param>
            <param name="serviceDstsAccountName">The dSTS Account Name
            service.</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedJitClaim.ResourceType">
            <summary>
            Gets or sets the JIT resource type the claim applies to.
            example: RDFE
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedJitClaim.Claim">
            <summary>
            Gets or sets the claim value.
            example: PlatformServiceAdministrator
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedJitClaim.HomeDsts">
            <summary>
            Gets or sets optional. The home dSTS endpoint for the service.
            example: ch1-dsts.dsts.core.windows.net
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedJitClaim.ServiceDstsAccountName">
            <summary>
            Gets or sets the dSTS Account Name service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.ExecuteOperationResponse">
            <summary>
            The response sent to the client when an operation is executed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.ExecuteOperationResponse.#ctor">
            <summary>
            Initializes a new instance of the ExecuteOperationResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.ExecuteOperationResponse.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ExecuteOperationResponse class.
            </summary>
            <param name="id">Operation id.</param>
            <param name="operationLocation">Operation Location url</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.ExecuteOperationResponse.Id">
            <summary>
            Gets or sets operation id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.ExecuteOperationResponse.OperationLocation">
            <summary>
            Gets or sets operation Location url
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.Extension">
            <summary>
            A class representing extension details.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.#ctor">
            <summary>
            Initializes a new instance of the Extension class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Geneva.Actions.Client.Models.Operation},System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedAuthEndpoint},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the Extension class.
            </summary>
            <param name="name">Extension name
            eg: "RDFE"</param>
            <param name="contactEmailaddress">Contact information for the
            extension</param>
            <param name="icmTeamid">IcM contact information for the
            extension</param>
            <param name="icmServiceid">IcM contact information for the
            extension</param>
            <param name="serviceTreeid">Service Tree information for the
            extension</param>
            <param name="version">Version identifier for the extension
            package</param>
            <param name="operations">List of operations for the
            extension</param>
            <param name="delegatedAuthEndpoints">Dictionary of endpoint names
            to their corresponding delegated auth configurations.</param>
            <param name="packageIdentifier">Unique package identifier for the
            extension package</param>
            <param name="metricAccount">Monitoring account to propagate
            extension metrics to</param>
            <param name="isApprovalServiceEnabled">Is Approval Service enabled
            for this extension.</param>
            <param name="isApprovalServiceEnabledForOpenAPIOperations">Is
            approval service enabled for open api operations in this extension
            For this flag to work, you need to enable the
            IsApprovalServiceEnabled property.
            If this flag is disabled and IsApprovalServiceEnabled is enabled
            then approval service will work only for coded operations.</param>
            <param name="icmService">Gets the Icm service to escalate
            to.</param>
            <param name="icmTeam">Gets the Icm team name to escalate
            to.</param>
            <param name="resourceTypes">The set of resource Types.</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.Name">
            <summary>
            Gets or sets extension name
            eg: "RDFE"
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.ContactEmailaddress">
            <summary>
            Gets or sets contact information for the extension
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.IcmTeamid">
            <summary>
            Gets or sets icM contact information for the extension
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.IcmServiceid">
            <summary>
            Gets or sets icM contact information for the extension
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.ServiceTreeid">
            <summary>
            Gets or sets service Tree information for the extension
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.Version">
            <summary>
            Gets or sets version identifier for the extension package
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.Operations">
            <summary>
            Gets or sets list of operations for the extension
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.DelegatedAuthEndpoints">
            <summary>
            Gets or sets dictionary of endpoint names to their corresponding
            delegated auth configurations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.PackageIdentifier">
            <summary>
            Gets or sets unique package identifier for the extension package
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.MetricAccount">
            <summary>
            Gets or sets monitoring account to propagate extension metrics to
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.IsApprovalServiceEnabled">
            <summary>
            Gets or sets is Approval Service enabled for this extension.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.IsApprovalServiceEnabledForOpenAPIOperations">
            <summary>
            Gets or sets is approval service enabled for open api operations in
            this extension
            For this flag to work, you need to enable the
            IsApprovalServiceEnabled property.
            If this flag is disabled and IsApprovalServiceEnabled is enabled
            then approval service will work only for coded operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.IcmService">
            <summary>
            Gets the Icm service to escalate to.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.IcmTeam">
            <summary>
            Gets the Icm team name to escalate to.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Extension.ResourceTypes">
            <summary>
            Gets or sets the set of resource Types.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem">
            <summary>
            History of previously executed operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem.#ctor">
            <summary>
            Initializes a new instance of the HistoryItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Geneva.Actions.Client.Models.OperationState},System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the HistoryItem class.
            </summary>
            <param name="id">Operation Id</param>
            <param name="resourceLocation">resourceLocation to get this
            operation details</param>
            <param name="createdDateTime">Timestamp of Operation created
            time</param>
            <param name="status">Operation state. Possible values include:
            'NotStarted', 'Running', 'Succeeded', 'Failed',
            'PendingCancellation', 'Canceled', 'PendingApproval'</param>
            <param name="extension">Extension name</param>
            <param name="operation">Operation name</param>
            <param name="endpoint">Endpoint name</param>
            <param name="detailedStatus">Detailed operation state</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem.Id">
            <summary>
            Gets or sets operation Id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem.ResourceLocation">
            <summary>
            Gets or sets resourceLocation to get this operation details
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem.CreatedDateTime">
            <summary>
            Gets or sets timestamp of Operation created time
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem.Status">
            <summary>
            Gets or sets operation state. Possible values include:
            'NotStarted', 'Running', 'Succeeded', 'Failed',
            'PendingCancellation', 'Canceled', 'PendingApproval'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem.Extension">
            <summary>
            Gets or sets extension name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem.Operation">
            <summary>
            Gets or sets operation name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem.Endpoint">
            <summary>
            Gets or sets endpoint name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem.DetailedStatus">
            <summary>
            Gets or sets detailed operation state
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.Operation">
            <summary>
            The operation to be executed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Operation.#ctor">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Operation.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
            <param name="id">Id for the operation</param>
            <param name="name">Name of the operation</param>
            <param name="isReadwrite">Boolean to denote if the operation
            isReadWrite</param>
            <param name="hasAccess">Boolean to denote if the user has access to
            the operation</param>
            <param name="operationGroup">Operation group the operation belongs
            to</param>
            <param name="hasAccessWithApproval">Boolean to denote if the user
            has access to the operation with an additional approval</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Operation.Id">
            <summary>
            Gets or sets id for the operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Operation.Name">
            <summary>
            Gets or sets name of the operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Operation.IsReadwrite">
            <summary>
            Gets or sets boolean to denote if the operation isReadWrite
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Operation.HasAccess">
            <summary>
            Gets or sets boolean to denote if the user has access to the
            operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Operation.OperationGroup">
            <summary>
            Gets or sets operation group the operation belongs to
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Operation.HasAccessWithApproval">
            <summary>
            Gets or sets boolean to denote if the user has access to the
            operation with an additional approval
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchInstance">
            <summary>
            Single instance of batch operation result
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchInstance.#ctor">
            <summary>
            Initializes a new instance of the OperationBatchInstance class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchInstance.#ctor(System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the OperationBatchInstance class.
            </summary>
            <param name="arguments">Arguments provided for one instance</param>
            <param name="resultMessage">Result of the operation</param>
            <param name="hasError">If operation has error</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchInstance.Arguments">
            <summary>
            Gets or sets arguments provided for one instance
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchInstance.ResultMessage">
            <summary>
            Gets or sets result of the operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchInstance.HasError">
            <summary>
            Gets or sets if operation has error
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult">
            <summary>
            A response payload for displaying results once the operation completes
            execution.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.#ctor">
            <summary>
            Initializes a new instance of the OperationBatchResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchInstance},System.Collections.Generic.IList{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Geneva.Actions.Client.Models.OperationState},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.String,System.Nullable{System.Guid},System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the OperationBatchResult class.
            </summary>
            <param name="results">Collection of results for batch
            operation</param>
            <param name="argumentsName">List of arguments name</param>
            <param name="createdDateTime">Timestamp of operation created
            time</param>
            <param name="dequeuedTime">Timestamp of operation got
            dequeued</param>
            <param name="executionStartTime">Timestamp of operation got
            executed</param>
            <param name="completedTime">Timestamp of operation got
            completed</param>
            <param name="lastActionDateTime">Timestamp of operation entered
            current state</param>
            <param name="status">Operation state. Possible values include:
            'NotStarted', 'Running', 'Succeeded', 'Failed',
            'PendingCancellation', 'Canceled', 'PendingApproval'</param>
            <param name="progressMessages">Operation progress messages</param>
            <param name="isFileOutput">Indicate whether operation has file
            outputs</param>
            <param name="resourceLocation">Path to retrieve fileOutput if there
            is an output file</param>
            <param name="activityId">Operation activity ID ,used to track in
            logs</param>
            <param name="endpoint">Operation activity ID ,used to track in
            logs</param>
            <param name="confirmationRequired">True if confirmation is required
            to run this operation</param>
            <param name="detailedStatus">Detailed operation state</param>
            <param name="id">Gets the operation id.</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.Results">
            <summary>
            Gets or sets collection of results for batch operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.ArgumentsName">
            <summary>
            Gets or sets list of arguments name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.CreatedDateTime">
            <summary>
            Gets or sets timestamp of operation created time
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.DequeuedTime">
            <summary>
            Gets or sets timestamp of operation got dequeued
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.ExecutionStartTime">
            <summary>
            Gets or sets timestamp of operation got executed
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.CompletedTime">
            <summary>
            Gets or sets timestamp of operation got completed
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.LastActionDateTime">
            <summary>
            Gets or sets timestamp of operation entered current state
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.Status">
            <summary>
            Gets or sets operation state. Possible values include:
            'NotStarted', 'Running', 'Succeeded', 'Failed',
            'PendingCancellation', 'Canceled', 'PendingApproval'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.ProgressMessages">
            <summary>
            Gets or sets operation progress messages
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.IsFileOutput">
            <summary>
            Gets or sets indicate whether operation has file outputs
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.ResourceLocation">
            <summary>
            Gets or sets path to retrieve fileOutput if there is an output file
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.ActivityId">
            <summary>
            Gets or sets operation activity ID ,used to track in logs
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.Endpoint">
            <summary>
            Gets or sets operation activity ID ,used to track in logs
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.ConfirmationRequired">
            <summary>
            Gets or sets true if confirmation is required to run this operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.DetailedStatus">
            <summary>
            Gets or sets detailed operation state
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationBatchResult.Id">
            <summary>
            Gets the operation id.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails">
            <summary>
            Class representing operation details.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.#ctor">
            <summary>
            Initializes a new instance of the OperationDetails class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Geneva.Actions.Client.Models.DelegatedJitClaim},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Microsoft.Azure.Geneva.Actions.Client.Models.AlternateOperation,System.Collections.Generic.IList{Microsoft.Azure.Geneva.Actions.Client.Models.Parameter},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the OperationDetails class.
            </summary>
            <param name="allowedEndpoints">List of endpoints supported by the
            operation</param>
            <param name="claims">List of claim names required to run the
            operation</param>
            <param name="delegatedJitClaims">List of delegated JIT claims
            object that the operation endpoint requires.
            The whole set of data resourceType, ServiceAccount and
            delegatedClaims is coming from the operation level here.</param>
            <param name="isIdempotent">Boolean to denote if the operation is
            idempotent</param>
            <param name="isHighrisk">Boolean to denote if the operation
            isHighrisk</param>
            <param name="operationState">To check whether the operation is
            1. Active
            2. Deprecated
            3. Disabled</param>
            <param name="alternateOperation">Details about an alternate
            operation that has been
            introduced instead of the current one. The extensionName
            and operationId enclosed within the object can be used
            to construct a link to the alternate operation</param>
            <param name="parameters">List of parameters for this operation;
            includes the dynamic parameters as well</param>
            <param name="description">The description of the operation</param>
            <param name="isProxy">Gets or sets the isProxy property of the
            operation.</param>
            <param name="notificationMessage">Gets or sets the notification
            message.</param>
            <param name="id">Id for the operation</param>
            <param name="name">Name of the operation</param>
            <param name="isReadwrite">Boolean to denote if the operation
            isReadWrite</param>
            <param name="hasAccess">Boolean to denote if the user has access to
            the operation</param>
            <param name="operationGroup">Operation group the operation belongs
            to</param>
            <param name="hasAccessWithApproval">Boolean to denote if the user
            has access to the operation with an additional approval</param>
            <param name="delegatedClaims">List of delegated claims. This set of
            data will be used to populate the claim values in the drop down
            while getting the jit access.
            The resourceType and service account will get fecthed using the
            extension level metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.AllowedEndpoints">
            <summary>
            Gets or sets list of endpoints supported by the operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.Claims">
            <summary>
            Gets or sets list of claim names required to run the operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.DelegatedJitClaims">
            <summary>
            Gets or sets list of delegated JIT claims object that the operation
            endpoint requires.
            The whole set of data resourceType, ServiceAccount and
            delegatedClaims is coming from the operation level here.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.IsIdempotent">
            <summary>
            Gets or sets boolean to denote if the operation is idempotent
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.IsHighrisk">
            <summary>
            Gets or sets boolean to denote if the operation isHighrisk
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.OperationState">
            <summary>
            Gets or sets to check whether the operation is
            1. Active
            2. Deprecated
            3. Disabled
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.AlternateOperation">
            <summary>
            Gets or sets details about an alternate operation that has been
            introduced instead of the current one. The extensionName
            and operationId enclosed within the object can be used
            to construct a link to the alternate operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.Parameters">
            <summary>
            Gets or sets list of parameters for this operation; includes the
            dynamic parameters as well
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.Description">
            <summary>
            Gets or sets the description of the operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.IsProxy">
            <summary>
            Gets or sets the isProxy property of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.NotificationMessage">
            <summary>
            Gets or sets the notification message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.Id">
            <summary>
            Gets or sets id for the operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.Name">
            <summary>
            Gets or sets name of the operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.IsReadwrite">
            <summary>
            Gets or sets boolean to denote if the operation isReadWrite
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.HasAccess">
            <summary>
            Gets or sets boolean to denote if the user has access to the
            operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.OperationGroup">
            <summary>
            Gets or sets operation group the operation belongs to
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.HasAccessWithApproval">
            <summary>
            Gets or sets boolean to denote if the user has access to the
            operation with an additional approval
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationDetails.DelegatedClaims">
            <summary>
            Gets or sets list of delegated claims. This set of data will be
            used to populate the claim values in the drop down while getting
            the jit access.
            The resourceType and service account will get fecthed using the
            extension level metadata.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest">
            <summary>
            Object used to construct the information needed to submit an operation
            execution request
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.#ctor">
            <summary>
            Initializes a new instance of the OperationRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the OperationRequest class.
            </summary>
            <param name="parameters">Input parameters for the
            operation.</param>
            <param name="extension">Extension name
            eg: "RDFE"</param>
            <param name="id">Operation Id to execute.
            eg: "FromEmailIdGetPUIDs"</param>
            <param name="endpoint">Full name of ACIS endpoint to call the
            operation against.
            eg. "Microsoft Test - RDFE Current"</param>
            <param name="allowProxy">Whether this request can be operated as a
            proxy</param>
            <param name="executionFlags">Flags specific to control operation
            execution, reserved for testing purposes, do not use
            outside of this context.</param>
            <param name="isBatch">Whether the request is batch or not.</param>
            <param name="flags">Input flags for the operation.  This is often
            unused, but can be used to specify meta-info about
            how we want results formatted, etc.</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.Parameters">
            <summary>
            Gets or sets input parameters for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.AllowProxy">
            <summary>
            Gets whether this request can be operated as a proxy
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.ExecutionFlags">
            <summary>
            Gets or sets flags specific to control operation execution,
            reserved for testing purposes, do not use
            outside of this context.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.IsBatch">
            <summary>
            Gets whether the request is batch or not.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.Extension">
            <summary>
            Gets or sets extension name
            eg: "RDFE"
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.Id">
            <summary>
            Gets or sets operation Id to execute.
            eg: "FromEmailIdGetPUIDs"
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.Endpoint">
            <summary>
            Gets or sets full name of ACIS endpoint to call the operation
            against.
            eg. "Microsoft Test - RDFE Current"
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.Flags">
            <summary>
            Gets or sets input flags for the operation.  This is often unused,
            but can be used to specify meta-info about
            how we want results formatted, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult">
            <summary>
            Result payload sent to the client when the operation completes its
            execution.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.#ctor">
            <summary>
            Initializes a new instance of the OperationResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Geneva.Actions.Client.Models.OperationState},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.String,System.Nullable{System.Guid},System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the OperationResult class.
            </summary>
            <param name="resultMessage">Operation result message when it's
            either succeeded or failed</param>
            <param name="arguments">Operation arguments which are the provided
            parameters values</param>
            <param name="htmlOutput">Operation html output</param>
            <param name="isBatch">Boolean describes if operation is batch
            operation</param>
            <param name="approvalStatus">The approval status.
            Possible values are: NotRequired, Pending, Approved, Denied,
            Canceled</param>
            <param name="reasonDenied">If the operation required approval and
            was denied, this will give the reason</param>
            <param name="executionId">Gets the operation id.
            Note, we already have a property called id. However, this is
            required to allow auto generation of
            of the OperationResult model in the client library instead of add
            this property in a separate
            extension class.</param>
            <param name="createdDateTime">Timestamp of operation created
            time</param>
            <param name="dequeuedTime">Timestamp of operation got
            dequeued</param>
            <param name="executionStartTime">Timestamp of operation got
            executed</param>
            <param name="completedTime">Timestamp of operation got
            completed</param>
            <param name="lastActionDateTime">Timestamp of operation entered
            current state</param>
            <param name="status">Operation state. Possible values include:
            'NotStarted', 'Running', 'Succeeded', 'Failed',
            'PendingCancellation', 'Canceled', 'PendingApproval'</param>
            <param name="progressMessages">Operation progress messages</param>
            <param name="isFileOutput">Indicate whether operation has file
            outputs</param>
            <param name="resourceLocation">Path to retrieve fileOutput if there
            is an output file</param>
            <param name="activityId">Operation activity ID ,used to track in
            logs</param>
            <param name="endpoint">Operation activity ID ,used to track in
            logs</param>
            <param name="confirmationRequired">True if confirmation is required
            to run this operation</param>
            <param name="detailedStatus">Detailed operation state</param>
            <param name="id">Gets the operation id.</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.ResultMessage">
            <summary>
            Gets or sets operation result message when it's either succeeded or
            failed
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.Arguments">
            <summary>
            Gets or sets operation arguments which are the provided parameters
            values
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.HtmlOutput">
            <summary>
            Gets or sets operation html output
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.IsBatch">
            <summary>
            Gets or sets boolean describes if operation is batch operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.ApprovalStatus">
            <summary>
            Gets or sets the approval status.
            Possible values are: NotRequired, Pending, Approved, Denied,
            Canceled
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.ReasonDenied">
            <summary>
            Gets or sets if the operation required approval and was denied,
            this will give the reason
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.ExecutionId">
            <summary>
            Gets the operation id.
            Note, we already have a property called id. However, this is
            required to allow auto generation of
            of the OperationResult model in the client library instead of add
            this property in a separate
            extension class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.CreatedDateTime">
            <summary>
            Gets or sets timestamp of operation created time
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.DequeuedTime">
            <summary>
            Gets or sets timestamp of operation got dequeued
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.ExecutionStartTime">
            <summary>
            Gets or sets timestamp of operation got executed
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.CompletedTime">
            <summary>
            Gets or sets timestamp of operation got completed
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.LastActionDateTime">
            <summary>
            Gets or sets timestamp of operation entered current state
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.Status">
            <summary>
            Gets or sets operation state. Possible values include:
            'NotStarted', 'Running', 'Succeeded', 'Failed',
            'PendingCancellation', 'Canceled', 'PendingApproval'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.ProgressMessages">
            <summary>
            Gets or sets operation progress messages
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.IsFileOutput">
            <summary>
            Gets or sets indicate whether operation has file outputs
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.ResourceLocation">
            <summary>
            Gets or sets path to retrieve fileOutput if there is an output file
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.ActivityId">
            <summary>
            Gets or sets operation activity ID ,used to track in logs
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.Endpoint">
            <summary>
            Gets or sets operation activity ID ,used to track in logs
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.ConfirmationRequired">
            <summary>
            Gets or sets true if confirmation is required to run this operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.DetailedStatus">
            <summary>
            Gets or sets detailed operation state
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationResult.Id">
            <summary>
            Gets the operation id.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.OperationsHistoryResult">
            <summary>
            A collection of operation histories.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationsHistoryResult.#ctor">
            <summary>
            Initializes a new instance of the OperationsHistoryResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OperationsHistoryResult.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Geneva.Actions.Client.Models.HistoryItem})">
            <summary>
            Initializes a new instance of the OperationsHistoryResult class.
            </summary>
            <param name="remarks">remarks, usually informs if one or more
            regions are missed from current result</param>
            <param name="history">History as IQueryable HistoryItem</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationsHistoryResult.Remarks">
            <summary>
            Gets or sets remarks, usually informs if one or more regions are
            missed from current result
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OperationsHistoryResult.History">
            <summary>
            Gets or sets history as IQueryable HistoryItem
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.OperationState">
            <summary>
            Defines values for OperationState.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.Models.OperationState.NotStarted">
            <summary>
            The operation has not yet started
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.Models.OperationState.Running">
            <summary>
            The operation is running
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.Models.OperationState.Succeeded">
            <summary>
            The operation has finished successfully
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.Models.OperationState.Failed">
            <summary>
            The operation has failed
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.Models.OperationState.PendingCancellation">
            <summary>
            A cancellation was requested on the operation
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.Models.OperationState.Canceled">
            <summary>
            The operation was canceled
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Geneva.Actions.Client.Models.OperationState.PendingApproval">
            <summary>
            The operation is pending approval
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter">
            <summary>
            Represents a parameter object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.#ctor">
            <summary>
            Initializes a new instance of the Parameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the Parameter class.
            </summary>
            <param name="id">Id for the parameter</param>
            <param name="description">Description for the parameter</param>
            <param name="name">Name for the parameter</param>
            <param name="required">Boolean to denote if the parameter is
            strictly required to request the operation</param>
            <param name="defaultValue">Default value for the parameter</param>
            <param name="displayType">Display Type for the parameter</param>
            <param name="type">Validation type for the parameter</param>
            <param name="sensitive">Boolean to denote if the parameter
            isSensitive/Secret</param>
            <param name="dynamicProperty">Boolean to denote if this is a
            dynamic parameter</param>
            <param name="items">List of allowed values for this
            parameter</param>
            <param name="dependsOn">List of parameters this depends on</param>
            <param name="category">Indicates category of parameter e.g. default
            or with specific purpose like ResourceScope to be added in Lockbox
            scenario</param>
            <param name="visibility">Gets or sets the visibility.</param>
            <param name="readOnlyProperty">Gets or sets the readOnly property
            of the parameter.</param>
            <param name="schema">Json schema of parameter</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.Id">
            <summary>
            Gets or sets id for the parameter
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.Description">
            <summary>
            Gets or sets description for the parameter
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.Name">
            <summary>
            Gets or sets name for the parameter
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.Required">
            <summary>
            Gets or sets boolean to denote if the parameter is strictly
            required to request the operation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.DefaultValue">
            <summary>
            Gets or sets default value for the parameter
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.DisplayType">
            <summary>
            Gets or sets display Type for the parameter
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.Type">
            <summary>
            Gets or sets validation type for the parameter
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.Sensitive">
            <summary>
            Gets or sets boolean to denote if the parameter isSensitive/Secret
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.DynamicProperty">
            <summary>
            Gets or sets boolean to denote if this is a dynamic parameter
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.Items">
            <summary>
            Gets or sets list of allowed values for this parameter
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.DependsOn">
            <summary>
            Gets or sets list of parameters this depends on
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.Category">
            <summary>
            Gets or sets indicates category of parameter e.g. default or with
            specific purpose like ResourceScope to be added in Lockbox scenario
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.Visibility">
            <summary>
            Gets or sets the visibility.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.ReadOnlyProperty">
            <summary>
            Gets or sets the readOnly property of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Parameter.Schema">
            <summary>
            Gets or sets json schema of parameter
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.Service">
            <summary>
            Describes single service (as per service tree)
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Service.#ctor">
            <summary>
            Initializes a new instance of the Service class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Service.#ctor(System.Nullable{System.Guid},System.String)">
            <summary>
            Initializes a new instance of the Service class.
            </summary>
            <param name="id">Service Tree ID</param>
            <param name="name">Name of service tree service</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Service.Id">
            <summary>
            Gets or sets service Tree ID
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Service.Name">
            <summary>
            Gets or sets name of service tree service
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResult">
            <summary>
            OnboardStatusResult class
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResult.#ctor">
            <summary>
            Initializes a new instance of the OnboardStatusResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResultItem},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the OnboardStatusResult class.
            </summary>
            <param name="onboardStatusResultItems">List of
            OnboardStatusResultItem - one per each environment
            onboarded.</param>
            <param name="messages">Any messages to be passed onto user</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResult.OnboardStatusResultItems">
            <summary>
            Gets or sets list of OnboardStatusResultItem - one per each
            environment onboarded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResult.Messages">
            <summary>
            Gets or sets any messages to be passed onto user
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResultItem">
            <summary>
            Overall status of onboarding request
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResultItem.#ctor">
            <summary>
            Initializes a new instance of the OnboardStatusResultItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResultItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the OnboardStatusResultItem class.
            </summary>
            <param name="environmentName">Environment Name. Possible values
            include: 'Dev', 'Test', 'Public', 'Mooncake', 'Fairfax',
            'Blackforest', 'Int', 'PublicBeta', 'MooncakeBeta', 'FairfaxBeta',
            'BlackforestBeta', 'USSec', 'USNat'</param>
            <param name="administratorsClaim">Administrators claim.</param>
            <param name="jitPolicyApprovalUri">JIT policy URI.
            On Success - this will contain a deep link to DSCM page for JIT
            policy approval.
            On Failure - null</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResultItem.EnvironmentName">
            <summary>
            Gets or sets environment Name. Possible values include: 'Dev',
            'Test', 'Public', 'Mooncake', 'Fairfax', 'Blackforest', 'Int',
            'PublicBeta', 'MooncakeBeta', 'FairfaxBeta', 'BlackforestBeta',
            'USSec', 'USNat'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResultItem.AdministratorsClaim">
            <summary>
            Gets or sets administrators claim.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardStatusResultItem.JitPolicyApprovalUri">
            <summary>
            Gets or sets JIT policy URI.
            On Success - this will contain a deep link to DSCM page for JIT
            policy approval.
            On Failure - null
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest">
            <summary>
            Object used to construct the information needed to submit an onboarding
            request
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest.#ctor">
            <summary>
            Initializes a new instance of the OnboardRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest.#ctor(System.Nullable{System.Guid},System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the OnboardRequest class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest.ServiceTreeId">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest.ExtensionName">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest.AdministratorsSecurityGroup">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest.Scope">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest.Environments">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest.SkipClaimMappings">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.OnboardRequest.ValidateOnly">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.ExtensionManagementData">
            <summary>
            Describes management meta data of an extension
            This is evolving class, expect more data members to be added. Existing
            schema will continue to be respected
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.ExtensionManagementData.#ctor">
            <summary>
            Initializes a new instance of the ExtensionManagementData class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.ExtensionManagementData.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Geneva.Actions.Client.Models.Claim},Microsoft.Azure.Geneva.Actions.Client.Models.Package,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the ExtensionManagementData class.
            </summary>
            <param name="name">Name of extension</param>
            <param name="administratorClaims">Administrator claims for this
            extension</param>
            <param name="package">Package metadata for this extension</param>
            <param name="isExtensionAdministrator">True, if currently logged in
            user is extension administrator otherwise false</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.ExtensionManagementData.Name">
            <summary>
            Gets or sets name of extension
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.ExtensionManagementData.AdministratorClaims">
            <summary>
            Gets or sets administrator claims for this extension
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.ExtensionManagementData.Package">
            <summary>
            Gets or sets package metadata for this extension
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.ExtensionManagementData.IsExtensionAdministrator">
            <summary>
            Gets or sets true, if currently logged in user is extension
            administrator otherwise false
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.Claim">
            <summary>
            Describes a claim.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Claim.#ctor">
            <summary>
            Initializes a new instance of the Claim class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Claim.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Claim class.
            </summary>
            <param name="value">Claim value e.g..
            AzureRT-PlatformServiceAdministrator</param>
            <param name="type">Claim type e.g..
            http://schemas.microsoft.com/ws/2008/06/identity/claims/role</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Claim.Value">
            <summary>
            Gets or sets claim value e.g.. AzureRT-PlatformServiceAdministrator
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Claim.Type">
            <summary>
            Gets or sets claim type e.g..
            http://schemas.microsoft.com/ws/2008/06/identity/claims/role
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Models.Package">
            <summary>
            Package metadata
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Package.#ctor">
            <summary>
            Initializes a new instance of the Package class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Models.Package.#ctor(System.String,System.Nullable{System.Guid},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the Package class.
            </summary>
            <param name="name">Package Name (Same as Extension Name)</param>
            <param name="identifier">PackageIdentifier (GUID) is the package's
            unique ID</param>
            <param name="uploadDate">Upload date</param>
            <param name="uploadedBy">Email of the user</param>
            <param name="status">Current status of the package. Possible values
            include: 'Active', 'Archived'</param>
            <param name="isSigned">Is the Package signed?</param>
            <param name="isApplockerCompliant">Is the Package applocker
            compliant?</param>
            <param name="version">This is a user defined version</param>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Package.Name">
            <summary>
            Gets or sets package Name (Same as Extension Name)
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Package.Identifier">
            <summary>
            Gets or sets packageIdentifier (GUID) is the package's unique ID
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Package.UploadDate">
            <summary>
            Gets or sets upload date
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Package.UploadedBy">
            <summary>
            Gets or sets email of the user
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Package.Status">
            <summary>
            Gets or sets current status of the package. Possible values
            include: 'Active', 'Archived'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Package.IsSigned">
            <summary>
            Gets or sets is the Package signed?
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Package.IsApplockerCompliant">
            <summary>
            Gets or sets is the Package applocker compliant?
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Models.Package.Version">
            <summary>
            Gets or sets this is a user defined version
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Operations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.#ctor(Microsoft.Azure.Geneva.Actions.Client.GenevaActionsRestAPIClient)">
            <summary>
            Initializes a new instance of the Operations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Geneva.Actions.Client.Operations.Client">
            <summary>
            Gets a reference to the GenevaActionsRestAPIClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.GetOperationsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations History
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.RunOperationWithHttpMessagesAsync(Microsoft.Azure.Geneva.Actions.Client.Models.OperationRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Runs the specific Operation.
            </summary>
            <param name='operationRequest'>
            The operation request.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.GetOperationsHistoryAsyncWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations History from all regions
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.GetOperationResultsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations Results
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.GetOperationArgumentsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations Parameters
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.GetBatchOperationResultsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations Results
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.GetOperationStatusWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations Status
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.GetOperationFileOutputWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get Operations file output
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.RunBatchOperationWithHttpMessagesAsync(Microsoft.Azure.Geneva.Actions.Client.Models.BatchOperationRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Run batch Operation
            </summary>
            <param name='batchOperationRequest'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Operations.CancelOperationWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancel Operation
            </summary>
            <param name='id'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.ServerErrorDetectionStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Geneva.Actions.Client.Utilities">
            <summary>
            Internal utilities
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Utilities.InsertLocationHeader(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            Utility method to check and add the operation header location.
            </summary>
            <param name="location">The location from where the status will be polled.</param>
            <param name="customHeaders">Dictionary of request headers.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Utilities.Copy(System.Net.Http.WebRequestHandler)">
            <summary>
            Creates a copy of the web request handler. This is temporary aleternate fix to using reflection,
            since there is an issue with some SAW users not able to execute the commands due to SAW issue.
            </summary>
            <param name="webRequestHandler"><see cref="T:System.Net.Http.WebRequestHandler"/></param>
        </member>
        <member name="M:Microsoft.Azure.Geneva.Actions.Client.Utilities.Copy``2(``0)">
            <summary>
            Utility for a deep copy of properties from one object to another.
            </summary>
            <typeparam name="Tin">Source Object Type.</typeparam>
            <typeparam name="Tout">Destination Object Type.</typeparam>
            <param name="sourceObject">Source Object</param>
            <returns>Destination Object</returns>
        </member>
    </members>
</doc>
